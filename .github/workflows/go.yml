name: Go
on:
  push:
    branches:
      - master
      - customer
      - dev
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: use cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 自动化测试时使用的配置信息
      - name: go build and test
        env:
          CGO_ENABLED: 0
        run: |
          cd server
          export MYAPP_TEST_CONFIG='${{ secrets.TEST_CONFIG }}'
          export TZ='Asia/Shanghai'
          go build -ldflags "-X 'github.com/krilie/lico_alone/common/run_env.VERSION=`cat ../version`' -X 'github.com/krilie/lico_alone/common/run_env.BUILD_TIME=`date "+%Y-%m-%d %H:%M:%S"`' -X 'github.com/krilie/lico_alone/common/run_env.GO_VERSION=`go version`' -X 'github.com/krilie/lico_alone/common/run_env.GIT_COMMIT=${GITHUB_SHA}'"  -v .
          go test -tags "auto_test" -v ./...
          cd ..

      - name: use npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 使用 node:10
      - name: use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      # npm install
      - name: npm install and build
        run: |
          cd web
          npm install
          npm run build
          cd ..

      - name: copy-file-to-docker
        run: |
          cp ./server/lico_alone ./docker/lico_alone
          cp -rf ./web/build ./docker/www
          echo ::set-env name=GITHUB_SHA_SHORT::$(echo $GITHUB_SHA | cut -c 1-6)
          echo ::set-env name=DOCKER_IMAGE_TAGS_LATEST::"latest"
          echo ::set-env name=DOCKER_IMAGE_TAGS_VERSION::$(cat version)
          echo ::set-env name=TZ::"Asia/Shanghai"

      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        env:
          TAG: ${{ github.sha }}
          TZ:  "Asia/Shanghai"
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          path: ./docker
          repository: ${{ secrets.DOCKER_IMAGE_NAME }}
          tags:  ${{ env.DOCKER_IMAGE_TAGS_VERSION }},${{ env.GITHUB_SHA_SHORT }}

      - name: apply app server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            kubectl set image deployment/myapp myapp-backend=${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.GITHUB_SHA_SHORT }}